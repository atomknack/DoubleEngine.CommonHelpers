<#/*THIS IS A T4 FILE*/#>
<#@ template language="C#" #>
<#@ output extension=".gen.cs" #>
//     This code was generated by a tool. Changes will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using Collections.Pooled;
using CollectionLike.Pooled;
using CollectionLike.Enumerables;

namespace CollectionLike;

public static partial class CollectionLike_Extensions
{
<# 
(string name, string varName)[] testTypes = new[]
    {
    ("List", "List<T>"),
    ("PooledList", "PooledList<T>"),
    };

for (var a = 0; a<testTypes.Length; ++a)
    {
        var tt = testTypes[a];
#>
    public static bool TryPopLast<T>(this <#=tt.varName#> list, out T item)
    {
        if (list.IsNullOrEmpty())
        {
            item = default;
            return false;
        }
        item = list.PopLast();
        return true;
    }
    public static T PopLast<T>(this <#=tt.varName#> list)
    {
        int index = list.IndexOfLast();
        T result = list[index];
        list.RemoveAt(index);
        return result;
    }

    public static T PopAt<T>(this <#=tt.varName#> items, int index)
    {
        T t = items[index];
        items.RemoveAt(index);
        return t;
    }

    [Obsolete("need testing")]
    public static T PopAt_UseLastToFillHole<T>(this <#=tt.varName#> list, int index)
    {
        var indexOfLast = list.IndexOfLast();
        var t = list[index];
        list[index] = list[indexOfLast];
        list.RemoveAt(indexOfLast);
        return t;
    }

<# } #>
}
